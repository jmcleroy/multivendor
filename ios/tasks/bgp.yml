- name: template the configuration locally
  connection: local
  template:
    src: bgp.j2
    dest: "{{playbook_dir}}/rendered_configs/{{inventory_hostname}}-bgp.txt"

- name: push config to device
  cli_config:
    config: "{{ lookup('template', 'bgp.j2') }}"

- name: grab bgp output
  cli_command:
    command: show ip bgp summary
  register: show_ip_bgp_summary

- name: import the network-engine role
  import_role:
    name: ansible-network.network-engine

- name: use command parser
  command_parser:
    file: "{{playbook_dir}}/roles/ansible-network.cisco_ios/parser_templates/cli/show_ip_bgp_summary.yaml"
    content: "{{ show_ip_bgp_summary.stdout }}"

# - name: print out the output
#   debug:
#     msg: 'BGP STATUS FOR {{peer}} IS {{status}}'
#   vars:
#     peer: "{{ ansible_facts.cisco_ios.vrf.DEFAULT.protocols.bgp.neighbors | first }}"
#     status: "{{ 'Established' if ':' in ansible_facts.cisco_ios.vrf.DEFAULT.protocols.bgp.neighbors[peer].timer else 'Down' }}"

- name: set_fact peer
  set_fact:
    peer: "{{ ansible_facts.cisco_ios.vrf.DEFAULT.protocols.bgp.neighbors | first }}"

- name: set_fact status
  set_fact:
    status: "{{ 'Established' if ':' in ansible_facts.cisco_ios.vrf.DEFAULT.protocols.bgp.neighbors[peer].timer else 'Down' }}"
